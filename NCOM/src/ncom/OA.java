/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ncom;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.awt.Graphics;

/**
 *
 * @author Adriana
 */
public class OA extends javax.swing.JFrame {
    /**
     * Creates new form EDT
     */
     public OA() {
        initComponents();
        this.setLocationRelativeTo(null);
        
    }
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/utn.jpeg"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabelOperaciobesAvanzadas = new javax.swing.JLabel();
        jLabelPotenciaNSima = new javax.swing.JLabel();
        jLabelPiquito = new javax.swing.JLabel();
        jLabelRaizNSima = new javax.swing.JLabel();
        jLabelRaiz = new javax.swing.JLabel();
        jLabelRaiz2 = new javax.swing.JLabel();
        jLabelRaiz3 = new javax.swing.JLabel();
        exponente = new javax.swing.JTextField();
        base = new javax.swing.JTextField();
        indice = new javax.swing.JTextField();
        radicando = new javax.swing.JTextField();
        btn_calcular_raiz_primitiva = new javax.swing.JButton();
        btn_calcular_potencia_nsima = new javax.swing.JButton();
        btn_calcular_raiz_nsima = new javax.swing.JButton();
        jButtonAtras = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResultados = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelFondoRojo = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelOperaciobesAvanzadas.setFont(new java.awt.Font("ISOCPEUR", 1, 30)); // NOI18N
        jLabelOperaciobesAvanzadas.setText("OPERACIONES AVANZADAS");
        getContentPane().add(jLabelOperaciobesAvanzadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, 40));

        jLabelPotenciaNSima.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelPotenciaNSima.setText("Potencia n-sima:");
        getContentPane().add(jLabelPotenciaNSima, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 20));

        jLabelPiquito.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelPiquito.setText("^");
        getContentPane().add(jLabelPiquito, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 40, -1));

        jLabelRaizNSima.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelRaizNSima.setText("Raiz n-sima:");
        getContentPane().add(jLabelRaizNSima, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        jLabelRaiz.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelRaiz.setText("________");
        getContentPane().add(jLabelRaiz, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 190, -1, -1));

        jLabelRaiz2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelRaiz2.setText("/");
        getContentPane().add(jLabelRaiz2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, -1, -1));

        jLabelRaiz3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelRaiz3.setText("\\");
            getContentPane().add(jLabelRaiz3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 242, -1, 20));

            exponente.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    exponenteActionPerformed(evt);
                }
            });
            getContentPane().add(exponente, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 50, -1));

            base.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
            base.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    baseActionPerformed(evt);
                }
            });
            getContentPane().add(base, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 140, -1));

            indice.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    indiceActionPerformed(evt);
                }
            });
            getContentPane().add(indice, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 50, -1));

            radicando.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
            radicando.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    radicandoActionPerformed(evt);
                }
            });
            getContentPane().add(radicando, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 179, -1));

            btn_calcular_raiz_primitiva.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            btn_calcular_raiz_primitiva.setText("CALCULAR RAIZ PRIMITIVA");
            btn_calcular_raiz_primitiva.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btn_calcular_raiz_primitivaActionPerformed(evt);
                }
            });
            getContentPane().add(btn_calcular_raiz_primitiva, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

            btn_calcular_potencia_nsima.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            btn_calcular_potencia_nsima.setText("CALCULAR POTENCIA N-SIMA");
            btn_calcular_potencia_nsima.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btn_calcular_potencia_nsimaActionPerformed(evt);
                }
            });
            getContentPane().add(btn_calcular_potencia_nsima, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, -1, -1));

            btn_calcular_raiz_nsima.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            btn_calcular_raiz_nsima.setText("CALCULAR RAIZ N-SIMA");
            btn_calcular_raiz_nsima.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btn_calcular_raiz_nsimaActionPerformed(evt);
                }
            });
            getContentPane().add(btn_calcular_raiz_nsima, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

            jButtonAtras.setText("ATRAS");
            jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonAtrasActionPerformed(evt);
                }
            });
            getContentPane().add(jButtonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

            jTableResultados.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
            jTableResultados.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null},
                    {null}
                },
                new String [] {
                    "Resultado/s:"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.String.class
                };
                boolean[] canEdit = new boolean [] {
                    false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            jScrollPane1.setViewportView(jTableResultados);

            getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, 140, 270));

            jPanel1.setBackground(new java.awt.Color(255, 255, 255));
            jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel1.setForeground(new java.awt.Color(255, 255, 255));

            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/flecha.png"))); // NOI18N

            jLabel5.setFont(new java.awt.Font("ISOCPEUR", 1, 44)); // NOI18N
            jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel5.setText("[NCOM]");
            jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel4)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
            );

            getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 50));

            jLabelFondoRojo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondoRojo3.png"))); // NOI18N
            jLabelFondoRojo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jLabelFondoRojo.addContainerListener(new java.awt.event.ContainerAdapter() {
                public void componentAdded(java.awt.event.ContainerEvent evt) {
                    jLabelFondoRojoComponentAdded(evt);
                }
            });
            getContentPane().add(jLabelFondoRojo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, -1));

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btn_calcular_potencia_nsimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcular_potencia_nsimaActionPerformed
        String _base = base.getText();
        String _exponente = exponente.getText();
        parser baseOk = new parser(_base,false);
        parser exponenteOk = new parser(_exponente,false);
        if("".equals(_base) || "".equals(_exponente)){ 
            for(int i=0; i< 14; i++){ jTableResultados.setValueAt("",i,0); }
             JOptionPane.showMessageDialog( null,
                                           "No se ingresaron datos",
                                           "Atencion",
                                           JOptionPane.WARNING_MESSAGE);
        }else if(!exponenteOk.esNatural()){
            JOptionPane.showMessageDialog( null,
                                           "El exponente es incorrecto",
                                           "Atencion",
                                           JOptionPane.WARNING_MESSAGE);
        }
        else{
            String complejos[] = _base.substring(1,_base.length()-1).split(",");
            double parteReal;
            double parteImaginaria;
            boolean tipo;
            switch (baseOk.armarNumero()){
                case 1:
                    {
                        //BINOMICA
                        parteReal = Double.parseDouble(complejos[0]);
                        parteImaginaria = Double.parseDouble(complejos[1]);
                        tipo = false;
                        Numero numero = new Numero(parteReal,parteImaginaria,tipo);
                        numero.hacerPotencia(Double.parseDouble(_exponente));
                        numero.redondear();
                        jTableResultados.setValueAt("[ " + numero.a + " , " + numero.b + " ]",0,0);
                        break;
                    }
                case 2:
                    {
                        //POLAR
                        parteReal = Double.parseDouble(complejos[0]);
                        parteImaginaria = Double.parseDouble(complejos[1]);
                        tipo = true;
                        Numero numero = new Numero(parteReal,parteImaginaria,tipo);
                        numero.hacerPotencia(Double.parseDouble(_exponente));
                        numero.redondear();
                        jTableResultados.setValueAt("[ " + numero.a + " , " + numero.b + " ]",0,0);
                        break;
                    }
                default:
                    JOptionPane.showMessageDialog( null,
                            "La base es incorrecta",
                            "Atencion",
                            JOptionPane.WARNING_MESSAGE);
                    break;
            }
        }              
    }//GEN-LAST:event_btn_calcular_potencia_nsimaActionPerformed

    private void baseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_baseActionPerformed

    private void radicandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radicandoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radicandoActionPerformed

    private void jLabelFondoRojoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jLabelFondoRojoComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelFondoRojoComponentAdded

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        Main menu = new Main();
        menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    private void exponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exponenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exponenteActionPerformed

    private void btn_calcular_raiz_nsimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcular_raiz_nsimaActionPerformed
        String _radicando = radicando.getText();
        String _indice = indice.getText();
        for(int i=0; i< 14; i++){ jTableResultados.setValueAt("",i,0); }
        parser radicandoOk = new parser(_radicando,false);
        parser indiceOk = new parser(_indice,false);
        if("".equals(_radicando) || "".equals(_indice)){
            for(int i=0; i< 14; i++){ jTableResultados.setValueAt("",i,0); }
             JOptionPane.showMessageDialog( null,
                                           "No se ingresaron datos",
                                           "Atencion",
                                           JOptionPane.WARNING_MESSAGE);
        }
        else if(!indiceOk.esNatural()){
            JOptionPane.showMessageDialog( null,
                                           "El indice es incorrecto",
                                           "Atencion",
                                           JOptionPane.WARNING_MESSAGE);
        }
        else{
            String complejos[] = _radicando.substring(1,_radicando.length()-1).split(",");
            double parteReal;
            double parteImaginaria;
            boolean tipo;
            switch (radicandoOk.armarNumero()){
                case 1:
                    {
                        //BINOMICA
                        parteReal = Double.parseDouble(complejos[0]);
                        parteImaginaria = Double.parseDouble(complejos[1]);
                        tipo = false;
                        Numero numero = new Numero(parteReal,parteImaginaria,tipo);
                        ArrayList<String> resultados;
                        resultados = numero.hacerRaiz(Double.parseDouble(_indice));
                        int i=0;
                        while(i < Double.parseDouble(_indice)){
                            jTableResultados.setValueAt(resultados.get(i),i,0);
                            i++;
                        }
                        break;
                    }
                case 2:
                    {
                        //POLAR
                        parteReal = Double.parseDouble(complejos[0]);
                        parteImaginaria = Double.parseDouble(complejos[1]);
                        tipo = true;
                        Numero numero = new Numero(parteReal,parteImaginaria,tipo);
                        ArrayList<String> resultados;
                        resultados =numero.hacerRaiz(Double.parseDouble(_indice));
                        int i=0;
                        while(i < Double.parseDouble(_indice)){
                            jTableResultados.setValueAt(resultados.get(i),i,0);
                            i++;
                        }
                        break;
                    }
                default:
                    JOptionPane.showMessageDialog( null,
                            "El radicando es incorrecto",
                            "Atencion",
                            JOptionPane.WARNING_MESSAGE);
                    break;
            }
        }  
    }//GEN-LAST:event_btn_calcular_raiz_nsimaActionPerformed

    private void indiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_indiceActionPerformed

    private void btn_calcular_raiz_primitivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcular_raiz_primitivaActionPerformed
        String _radicandoPrimitiva = radicando.getText();
        String _indicePrimitiva = indice.getText();
        for(int i=0; i< 14; i++){ jTableResultados.setValueAt("",i,0); }
        parser radicandoOk = new parser(_radicandoPrimitiva,false);
        parser indiceOk = new parser(_indicePrimitiva,false);
        if("".equals(_radicandoPrimitiva) || "".equals(_indicePrimitiva)){
             for(int i=0; i< 14; i++){ jTableResultados.setValueAt("",i,0); }
             JOptionPane.showMessageDialog( null,
                                           "No se ingresaron datos",
                                           "Atencion",
                                           JOptionPane.WARNING_MESSAGE);
        }else if(!indiceOk.esNatural()){
            JOptionPane.showMessageDialog( null,
                                           "El indice es incorrecto",
                                           "Atencion",
                                           JOptionPane.WARNING_MESSAGE);
        }
        else{
            String complejos[] = _radicandoPrimitiva.substring(1,_radicandoPrimitiva.length()-1).split(",");
            double parteReal;
            double parteImaginaria;
            boolean tipo;
            switch (radicandoOk.armarNumero()){
                case 1:
                    {
                        //BINOMICA
                        parteReal = Double.parseDouble(complejos[0]);
                        parteImaginaria = Double.parseDouble(complejos[1]);
                        tipo = false;
                        Numero numero = new Numero(parteReal,parteImaginaria,tipo);
                        ArrayList<String> resultados;
                        resultados = numero.hacerRaizPrimitiva(Integer.parseInt(_indicePrimitiva));
                        int i=0;
                        while(i < numero.cantidadDePrimitivas(Integer.parseInt(_indicePrimitiva))){
                            jTableResultados.setValueAt(resultados.get(i),i,0);
                            i++;
                        }
                        break;
                    }
                case 2:
                    {
                        //POLAR
                        parteReal = Double.parseDouble(complejos[0]);
                        parteImaginaria = Double.parseDouble(complejos[1]);
                        tipo = true;
                        Numero numero = new Numero(parteReal,parteImaginaria,tipo);
                        ArrayList<String> resultados;
                        resultados = numero.hacerRaizPrimitiva(Integer.parseInt(_indicePrimitiva));
                        int i=0;
                        while(i < numero.cantidadDePrimitivas(Integer.parseInt(_indicePrimitiva))){
                            jTableResultados.setValueAt(resultados.get(i),i,0);
                            i++;
                        }
                        break;
                    }
                default:
                    JOptionPane.showMessageDialog( null,
                            "El radicando es incorrecto",
                            "Atencion",
                            JOptionPane.WARNING_MESSAGE);
                    break;
            }
        } 
    }//GEN-LAST:event_btn_calcular_raiz_primitivaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField base;
    private javax.swing.JButton btn_calcular_potencia_nsima;
    private javax.swing.JButton btn_calcular_raiz_nsima;
    private javax.swing.JButton btn_calcular_raiz_primitiva;
    private javax.swing.JTextField exponente;
    private javax.swing.JTextField indice;
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelFondoRojo;
    private javax.swing.JLabel jLabelOperaciobesAvanzadas;
    private javax.swing.JLabel jLabelPiquito;
    private javax.swing.JLabel jLabelPotenciaNSima;
    private javax.swing.JLabel jLabelRaiz;
    private javax.swing.JLabel jLabelRaiz2;
    private javax.swing.JLabel jLabelRaiz3;
    private javax.swing.JLabel jLabelRaizNSima;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableResultados;
    private javax.swing.JTextField radicando;
    // End of variables declaration//GEN-END:variables
}
